[General]
ScreenX=1440
ScreenY=2560
Times=0

[Script]
Dim x1,          x2,               y1,   y2        // 矩形区域:小地图采样点
Dim x3,          y3,               xEnd, yEnd      // 2个顶点:技能区/屏幕右下角顶点
Dim tarX,        tarY                              //目标
Dim logoX,       logoY,            intX, intY      //算目的地差值
Dim cY,          consecutiveTimes, consecutiveMax  //用这个东西判断角色是不是没有X或Y轴变化了
Dim tolerance,   tolLoc,           yTolerance      //快速移动的容差,0代表精确移动,另外个是局部变量
Dim staticCount, staticX,          staticY         //防卡计数器
Dim LEDState                                       //测试用:开大写键就是获取点位,不要切来切去的了

//18,76
//-17,140

Sub GetXY //获取角色的XY轴(如果找不到会左右移动)
    FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
    FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY

    if intX < 0 Then //人物跑到了边界  处理一下
        KeyDown Left
        DelayRandom 200,250
        KeyUp Left
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        if intX < 0 Then //左移了还是没找到,就右移
            KeyDown Right
            DelayRandom 200,250
            KeyUp Right
            FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        End if
    End if

    intX = intX - logoX
    intY = intY - logoY
End Sub

Sub AntiJam //一般跟随GetXY后用
    if staticX ==  intX and staticY == intY then //如果相等就累加计数器
        staticCount = staticCount + 1
    else
        staticX     = intX
        staticY     = intY
        staticCount = 0
    End If
    if staticCount >= 4 Then //
        if intY == 102 and intX < 10+6 and intX > 10-6 Then //白名单
            staticCount = 0
            Exit Sub
        End If

        Beep 500,500
        KeyAllup //施放所有按键并重启
        // RestartScript //重启 和上面二选一即可
        // 模拟从绳子跳走
        DelayRandom 13,15
        KeyDown Up
        DelayRandom 120,122
        KeyDown Space
        DelayRandom 69,70
        KeyUp Space
        DelayRandom 36,37
        KeyDown Space
        DelayRandom 69,70
        KeyUp Space
        DelayRandom 81,82
        KeyUp Up
        DelayRandom 44,48
        KeyDown S
        DelayRandom 124,126
        KeyUp S
        DelayRandom 52,53

    End If
End Sub

Sub Move  //精确的移动
    consecutiveTimes = -1  //初始就启用指南针判断
    consecutiveMax   = 5   //降落默认值为4
    while  1 > 0
        Call GetXY()
        if consecutiveTimes >= 0 Then //目前是在空中判断降落的阶段
            if intY == cY Then //Y轴没变化了
                consecutiveTimes = consecutiveTimes + 1
                TracePrint 降落判断: & consecutiveTimes
                if consecutiveTimes >= consecutiveMax Then
                    consecutiveTimes	= -1	//判断为已经落地
                    consecutiveMax		= 5		//归位最大降落判断值
                    TracePrint 判断已经落地
                End If
            else
                cY = intY
                consecutiveTimes = 0
                TracePrint 降落判断: & consecutiveTimes
            End If
        else //继续根据
            Call AntiJam()
            if tolerance > 4 Then
                tolLoc = tolerance
            else  //速走的默认为4
                tolLoc = 4
            End If
            //左右一个alt键可以跳23
            //左右一个连打可以跳34
            if intX < (tarX-26) Then //跳打形式
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳打
                DelayRandom 12,14
                KeyDown Right
                DelayRandom 79,80
                KeyDown Space
                DelayRandom 64,65
                KeyUp Space
                DelayRandom 60,61
                KeyDown Space
                DelayRandom 55,56
                KeyUp Right
                DelayRandom 16,17
                KeyUp Space
                DelayRandom 116,118
                KeyDown S
                DelayRandom 1375,1389
                KeyUp S
            else if intX > (tarX+26) Then //跳打形式
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳打
                DelayRandom 12,14
                KeyDown Left
                DelayRandom 79,80
                KeyDown Space
                DelayRandom 64,65
                KeyUp Space
                DelayRandom 60,61
                KeyDown Space
                DelayRandom 55,56
                KeyUp Left
                DelayRandom 16,17
                KeyUp Space
                DelayRandom 116,118
                KeyDown S
                DelayRandom 1375,1389
                KeyUp S
            else if intX < (tarX-16) Then //向右小按alt
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳
                DelayRandom 12,14
                KeyDown Right
                DelayRandom 122,125
                KeyDown Alt
                DelayRandom 130,160
                KeyUp Alt
                DelayRandom 22,23
                KeyUp Right
            Else If intX > (tarX+16) Then //向左小按alt
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳
                DelayRandom 12,14
                KeyDown Left
                DelayRandom 122,125
                KeyDown Alt
                DelayRandom 130,160
                KeyUp Alt
                DelayRandom 22,23
                KeyUp Left
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
                DelayRandom 230,260
                KeyUp Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
                DelayRandom 230,260
                KeyUp Left
            else
                If intY < (tarY - yTolerance) Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    consecutiveMax = 6 //延长一点降落判断
                    cY = intY
                    TracePrint 下跳一次
                    DelayRandom 12,13
                    KeyDown Down
                    DelayRandom 76,77
                    KeyDown Space
                    DelayRandom 128,130
                    KeyUp Space
                    DelayRandom 453,454
                    KeyUp Down
                    DelayRandom 32,33
                Else If intY > (tarY + yTolerance) Then //如果人在目标之下,就上跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    consecutiveMax = 6 //延长一点降落判断
                    TracePrint 上跳一次
                    DelayRandom 12,14
                    KeyDown Right
                    DelayRandom 42,47
                    KeyUp Right
                    DelayRandom 12,14
                    KeyDown LAlt
                    tolLoc = (intY - tarY - yTolerance) * 28
                    TracePrint tolLoc & 秒
                    Delay tolLoc //34的高度(400)  perY:28,max = 166(达不到)
                    KeyUp LAlt
                    DelayRandom 36,37
                    KeyDown Left
                    DelayRandom 52,53
                    KeyDown Right
                    DelayRandom 47,48
                    KeyDown Up
                    DelayRandom 51,52
                    KeyUp Up
                    DelayRandom 238,241
                    KeyUp Right
                    DelayRandom 22,23
                    KeyUp Left //34
                else
                    yTolerance = 0
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        for 10
                            If intX < (tarX-tolerance) Then //向右小碎步
                                tolLoc = (tarX - tolerance - intX) * 14
                                KeyDown Right
                                Delay tolLoc
                                KeyUp Right
                            Else If intX > (tarX+tolerance) Then //向左小碎步
                                tolLoc = (intX - tarX - tolerance) * 14
                                KeyDown Left
                                Delay tolLoc
                                KeyUp Left
                            else
                                Exit Sub
                            End If

                            Call GetXY() //更新人物坐标
                        Next
                        Exit Sub //次数到了直接结束
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

//分辨率初始化
yTolerance = 0
GetScreenResolution intX, intY
if intX > intY then //横放屏幕
    x1 = 700
    y1 = 550
    x2 = 1650
    y2 = 950
else //竖放屏幕
    x1 = 0
    y1 = 1650
    x2 = 300
    y2 = 2000
End If

while 1 > 0
    LEDState = GetLED(1)
    if LEDState == 0 then //
        tolLoc = 1
        GetFileLine tarX,MoveP.Conf,tolLoc		//文件查找
        tolLoc = 2
        GetFileLine tarY,MoveP.Conf,tolLoc		//文件查找
        tolLoc = 3
        GetFileLine tolerance,MoveP.Conf,tolLoc	//文件查找
        TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance
        //tolerance = 4 //容忍度,4为推荐值
        Call Move()
        MsgBox 测试结束
    else //大写键亮的话就获取点
        FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,0.9,0,logoX,logoY	//找图
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY	//找图
        If intX >= 0 Then
            // TracePrint [图标X轴 & logoX & ,图标Y轴 & logoY & ],[绿点X轴 & intX & ,绿点Y轴 & intY & ]
            // MsgBox [图标X轴 & logoX & ,图标Y轴 & logoY & ],[绿点X轴 & intX & ,绿点Y轴 & intY & ]
            intX = intX - logoX
            intY = intY - logoY
            TracePrint [人物X轴 & intX & ,人物Y轴 & intY & ]
            MsgBox [人物X轴 & intX & ,人物Y轴 & intY & ]
        else
            MsgBox "没找到"	 //弹窗
        End If
    End If
Wend