[General]
ScreenX=1440
ScreenY=2560
Times=0

[Script]
Dim x1,        x2,               y1,   y2        // 矩形区域:小地图采样点
Dim x3,        y3,               xEnd, yEnd      // 2个顶点:技能区/屏幕右下角顶点
Dim tarX,      tarY                              //目标
Dim logoX,     logoY,            intX, intY      //算目的地差值
Dim cY,        consecutiveTimes, consecutiveMax  //用这个东西判断角色是不是没有X或Y轴变化了
Dim tolerance, tolLoc,           yTolerance      //快速移动的容差,0代表精确移动,另外个是局部变量

//目前已经算出一个二段跳能跳32的X轴(平地)

Sub Move()  //精确的移动
    consecutiveTimes = -1  //初始就启用指南针判断
    consecutiveMax   = 3   //降落默认值为4
    while  1 > 0
        FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY

        if intX < 0 Then //人物跑到了边界  处理一下
            TracePrint 没找到人,开始左右移自测
            KeyDown Left
            DelayRandom 200,250
            KeyUp Left
            FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
            if intX < 0 Then //左移了还是没找到,就右移
                KeyDown Right
                DelayRandom 200,250
                KeyUp Right
                FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
            End if
        End if

        intX = intX - logoX
        intY = intY - logoY
        if consecutiveTimes >= 0 Then //目前是在空中判断降落的阶段
            if intY == cY Then //Y轴没变化了
                consecutiveTimes = consecutiveTimes + 1
                TracePrint 降落判断: & consecutiveTimes
                if consecutiveTimes >= consecutiveMax Then
                    consecutiveTimes	= -1	//判断为已经落地
                    consecutiveMax		= 3		//归位最大降落判断值
                    TracePrint 判断已经落地
                End If
            else
                cY = intY
                consecutiveTimes = 0
                TracePrint 降落判断: & consecutiveTimes
            End If
        else //继续根据
            if tolerance > 4 Then
                tolLoc = tolerance
            else  //速走的默认为4
                tolLoc = 4
            End If
            if intX < (tarX-36) Then //向右二段跳+普攻
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右S跳
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 38,39
                KeyDown Space
                DelayRandom 98,99
                KeyUp Space
                DelayRandom 37,38
                KeyDown Space
                DelayRandom 127,129
                KeyUp Space
                DelayRandom 225,228
                KeyDown S
                DelayRandom 24,25
                KeyUp Right
                DelayRandom 96,97
                KeyUp S
                DelayRandom 41,42
            Else If intX > (tarX+36) Then //向左二段跳+普攻
                consecutiveTimes = 0 //启动降落判断
                cY = 0
                TracePrint 左S跳
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 38,39
                KeyDown Space
                DelayRandom 98,99
                KeyUp Space
                DelayRandom 37,38
                KeyDown Space
                DelayRandom 127,129
                KeyUp Space
                DelayRandom 225,228
                KeyDown S
                DelayRandom 24,25
                KeyUp Left
                DelayRandom 96,97
                KeyUp S
                DelayRandom 41,42
            Else if intX < (tarX-24) Then //向右二段跳
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 54,55
                KeyDown Space
                DelayRandom 96,97
                KeyUp Space
                DelayRandom 39,40
                KeyDown Space
                DelayRandom 126,128
                KeyUp Space
                DelayRandom 83,84
                KeyUp Right
                DelayRandom 41,42
            Else If intX > (tarX+24) Then //向左二段跳
                consecutiveTimes = 0 //启动降落判断
                cY = 0
                TracePrint 左跳
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 54,55
                KeyDown Space
                DelayRandom 96,97
                KeyUp Space
                DelayRandom 39,40
                KeyDown Space
                DelayRandom 126,128
                KeyUp Space
                DelayRandom 83,84
                KeyUp Left
                DelayRandom 41,42
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
            else
                KeyUp Right
                KeyUp Left
                If intY < (tarY - yTolerance) Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    TracePrint 下跳一次
                    DelayRandom 12,13
                    KeyDown Down
                    DelayRandom 76,77
                    KeyDown Space
                    DelayRandom 128,130
                    KeyUp Space
                    DelayRandom 453,454
                    KeyUp Down
                    DelayRandom 32,33
                Else If intY > (tarY + yTolerance) Then //如果人在目标之下,就上跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    if intY > (tarY+25) Then	//>=26上跳就够不到了
                        consecutiveMax = 8 //延长一点降落判断
                        TracePrint 钩子一次
                        KeyDown Alt
                        DelayRandom 328,430
                        KeyUp Alt
                    else
                        consecutiveMax = 6 //延长一点降落判断
                        TracePrint 上跳一次
                        KeyDown Up
                        DelayRandom 120,122
                        KeyDown Space
                        DelayRandom 69,70
                        KeyUp Space
                        DelayRandom 36,37
                        KeyDown Space
                        DelayRandom 69,70
                        KeyUp Space
                        DelayRandom 81,82
                        KeyUp Up
                        DelayRandom 44,48
                        KeyDown S
                        DelayRandom 124,126
                        KeyUp S
                        DelayRandom 52,53
                    End If
                else
                    yTolerance = 0
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        //Y轴也达标了,到X轴了
                        If intX < (tarX-tolerance) Then //向右小碎步
                            KeyDown Right
                            DelayRandom 15,25
                            KeyUp Right
                        Else If intX > (tarX+tolerance) Then //向左小碎步
                            KeyDown Left
                            DelayRandom 15,25
                            KeyUp Left
                        else
                            Exit Sub
                        End If
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

//分辨率初始化
GetScreenResolution intX, intY
if intX > intY then //横放屏幕
    x1 = 700
    y1 = 550
    x2 = 1650
    y2 = 850
else //竖放屏幕
    x1 = 0
    y1 = 1650
    x2 = 300
    y2 = 1900
End If
tolLoc = 1
GetFileLine tarX,Move.Conf,tolLoc		//文件查找
tolLoc = 2
GetFileLine tarY,Move.Conf,tolLoc		//文件查找
tolLoc = 3
GetFileLine tolerance,Move.Conf,tolLoc	//文件查找
TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance
//tolerance = 4 //容忍度,4为推荐值
Call Move()
MsgBox 测试结束