[General]
ScreenX=1440
ScreenY=2560
Times=0

[Script]
Dim x1,             x2,               y1,   y2        // 矩形区域:小地图采样点
Dim x3,             y3,               xEnd, yEnd      // 2个顶点:技能区/屏幕右下角顶点
Dim tarX,           tarY                              //目标
Dim logoX,          logoY,            intX, intY      //算目的地差值
Dim tolerance,      yTolerance                        //快速移动的容差
Dim FartOK,         Hooking                           //熊屁的计时器冷却,钩子中判断
Dim cY,             consecutiveTimes, consecutiveMax  //用这个东西判断角色是不是没有X或Y轴变化了
Dim tolLoc,         a,                currentState    //冷却和状态相关
Dim stoneSteleTime, pickingTime,      boboTime        //冷却
Dim staticCount,    staticX,          staticY         //防卡计数器
Dim SavedX,         SavedY                            //保存一下临时处理的XY

Sub on_timer1 //熊屁计时器
    FartOK = 1
EndSub

Sub GetXY //获取角色的XY轴(如果找不到会左右移动)
    FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
    FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY

    if intX < 0 Then //人物跑到了边界  处理一下
        KeyDown Left
        DelayRandom 200,250
        KeyUp Left
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        if intX < 0 Then //左移了还是没找到,就右移
            KeyDown Right
            DelayRandom 200,250
            KeyUp Right
            FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        End if
    End if

    intX = intX - logoX
    intY = intY - logoY
End Sub

Sub AntiJam //一般跟随GetXY后用
    if staticX ==  intX and staticY == intY then //如果相等就累加计数器
        staticCount = staticCount + 1
    else
        staticX     = intX
        staticY     = intY
        staticCount = 0
    End If
    if staticCount >= 3 Then //
        if intY == 107 and intX < -8+6 and intX > -8-6 Then //白名单
            staticCount = 0
            Exit Sub
        End If

        Beep 500,500
        //KeyAllup //施放所有按键并重启
        // RestartScript //重启 和上面二选一即可
        // 模拟从绳子跳走
        DelayRandom 13,15
        KeyDown Right
        DelayRandom 21,22
        KeyDown Space
        DelayRandom 76,77
        KeyUp Space
        DelayRandom 44,45
        KeyUp Right
        DelayRandom 13,15

    End If
End Sub

Sub Move_Bear  //熊形态的移动(解决了卡绳子的问题)
    consecutiveTimes = -1  //初始就启用指南针判断
    consecutiveMax   = 4   //降落默认值为4
    while  1 > 0
        Call GetXY()

        if consecutiveTimes >= 0 Then //目前是在空中判断降落的阶段
            if Hooking > 0 and intY <= tarY - 5 Then //钩子的判断刹车
                KeyDown Alt
                DelayRandom 258,282
                KeyUp Alt
                Hooking = 0
            End If
            if intY == cY Then //Y轴没变化了
                consecutiveTimes = consecutiveTimes + 1
                if consecutiveTimes >= consecutiveMax Then
                    consecutiveTimes	= -1	//判断为已经落地
                    consecutiveMax		= 4		//归位最大降落判断值
                End If
            else
                cY = intY
                consecutiveTimes = 0
            End If
        else //继续根据
            Call AntiJam() //防卡
            if tolerance > 4 Then
                tolLoc = tolerance
            else  //速走的默认为4
                tolLoc = 4
            End If
            if intX < (tarX-24) Then //向右二段跳
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 95,96
                KeyDown Space
                DelayRandom 64,65
                KeyUp Space
                DelayRandom 119,121
                KeyDown Space
                DelayRandom 97,98
                KeyUp Space
                DelayRandom 42,43
                KeyUp Right
                DelayRandom 41,42
            Else If intX > (tarX+24) Then //向左二段跳
                consecutiveTimes = 0 //启动降落判断
                cY = 0
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 95,96
                KeyDown Space
                DelayRandom 64,65
                KeyUp Space
                DelayRandom 119,121
                KeyDown Space
                DelayRandom 97,98
                KeyUp Space
                DelayRandom 42,43
                KeyUp Left
                DelayRandom 41,42
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
                DelayRandom 230,260
                KeyUp Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
                DelayRandom 230,260
                KeyUp Left
            else
                If intY < (tarY - yTolerance) Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    DelayRandom 12,13
                    KeyDown Down
                    DelayRandom 76,77
                    KeyDown Space
                    DelayRandom 128,130
                    KeyUp Space
                    DelayRandom 453,454
                    KeyUp Down
                    DelayRandom 32,33
                Else If intY > (tarY + yTolerance) Then //如果人在目标之下,上钩
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    consecutiveMax = 8 //延长一点降落判断
                    Hooking = 1
                    KeyDown Alt
                    DelayRandom 328,430
                    KeyUp Alt
                else
                    yTolerance = 0 //重置Y容忍,默认为0
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        for 10
                            If intX < (tarX-tolerance) Then //向右小碎步
                                tolLoc = (tarX - tolerance - intX) * 14
                                KeyDown Right
                                Delay tolLoc
                                KeyUp Right
                            Else If intX > (tarX+tolerance) Then //向左小碎步
                                tolLoc = (intX - tarX - tolerance) * 14
                                KeyDown Left
                                Delay tolLoc
                                KeyUp Left
                            else
                                Exit Sub
                            End If

                            Call GetXY() //更新人物坐标
                        Next
                        Exit Sub //次数到了直接结束
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

Sub on_timer4 //查地图轮,每3秒一次

    FindPic x1,y1,x2,y2,"E:\MHImg\Rune.bmp",000000,1.00,0,intX,intY
    if intX >= 0 then
        FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY
        intX = intX - logoX
        intY = intY - logoY - 1 //图标的对准问题
        SavedX     = tarX  //(导航前先记录一下老坐标,然后再恢复,复用SavedX)
        SavedY     = tarY
        tarX       = intX
        tarY       = intY
        tolerance  = 2
        yTolerance = 3
        KeyAllup //防错误
        Call Move_Bear()
        tarX = SavedX
        tarY = SavedY
        //暂停脚本
        Beep 1000,200
        DelayRandom 100,120
        Beep 1000,200
        DelayRandom 100,120
        Beep 1000,200
        DelayRandom 100,120
        Beep 1000,200
        Pause
    else
    End If
    Timer 4,1,5000 //无限循环
EndSub

Sub Judge //判断人物是否在某个地点旁边,用tarXY,tolerance,tolLoc返回结果,不能嵌套move()使用,可以先使用这个再用move
    FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY
    FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
    tolLoc = 0
    if intX >= 0 Then //找到了人物才会进行下去
        intX = intX - logoX
        intY = intY - logoY
        if intY == tarY and intX >= (tarX - tolerance) and intX <= (tarX + tolerance) then
            tolLoc = 1
        End If
    End If
End Sub

Sub FindFountain //寻找喷泉并放喷泉(要求状态是0)
    FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Water.bmp",000000,1.00,0,intX,intY
    if intX >= 0 then //可以喷泉了
        tarX = -58
        tarY = 83
        tolerance = 4
        Call Move_Bear()
        DelayRandom 56,58
        KeyDown Right
        DelayRandom 62,68
        KeyUp Right
        DelayRandom 106,109
        KeyDown Down
        DelayRandom 95,96
        KeyDown 1
        DelayRandom 194,196
        KeyUp 1
        DelayRandom 66,67
        KeyUp Down
        DelayRandom 712,721
    End If
    currentState = 1 //无论找没找到喷泉下一步都是去左下角
End Sub

Sub Fart //放熊屁,CD没好就放其他技能
    while 1 > 0

        FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_V2.bmp",000000,1.00,0,intX,intY	//找V2
        if intX >= 0 Then //找到V2就放,瞬手的事
            KeyDown W
            DelayRandom 122,124
            KeyUp W
            DelayRandom 402,412
        End If

        FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Fart.bmp",000000,1.0,0,intX,intY	//找熊屁
        if intX >= 0 or FartOK == 1 Then
            FartOK = 0
            Timer 1,1,5000
            KeyDown D
            DelayRandom 623,650
            KeyUp D
            DelayRandom 105,106
            break
        else //放其他小技能
            FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Spider.bmp",000000,1.00,0,intX,intY
            if intX >= 0 Then //找蜘蛛
                KeyDown H
                DelayRandom 105,107
                KeyUp H
                DelayRandom 929,939
            else
                FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Lieyang.bmp",000000,1.00,0,intX,intY
                if intX >= 0 Then //找烈阳
                    KeyDown Y
                    DelayRandom 105,107
                    KeyUp Y
                    DelayRandom 811,813
                else
                    FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Whister.bmp",000000,1.00,0,intX,intY
                    if intX >= 0 Then //找哨子
                        KeyDown 5
                        DelayRandom 105,107
                        KeyUp 5
                        DelayRandom 272,284
                        KeyDown B
                        DelayRandom 97,99
                        KeyUp B
                        DelayRandom 312,324
                        KeyDown C
                        DelayRandom 214,217
                        KeyUp C
                        DelayRandom 879,891
                    else
                        FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_diningTable.bmp",000000,1.00,0,intX,intY
                        if intX >= 0 Then //找打翻
                            KeyDown V
                            DelayRandom 105,107
                            KeyUp V
                            DelayRandom 1529,1639
                        End If
                    End If

                End If
            End If
        End If

        DelayRandom 5,10
    Wend
End Sub

GetScreenResolution intX, intY
if intX > intY then //横放屏幕
    x1 = 700
    y1 = 550
    x2 = 1650
    y2 = 850
    x3 = 1500
    y3 = 1250
    xEnd = 2560
    yEnd = 1440
else //竖放屏幕
    x1 = 0
    y1 = 1650
    x2 = 300
    y2 = 1900
    x3 = 800
    y3 = 2300
    xEnd = 1440
    yEnd = 2560
End If
stoneSteleTime = 0               //上次轮回的时间
pickingTime    = GetTimeStamp()  //上次捡钱的时间
boboTime       = 0               //上次放小波波的时间
currentState   = -1              //初始状态不要去放喷泉
FartOK         = 0               //熊屁当前可放
yTolerance     = 0               //初始化容忍
Timer          4, 1, 3100        //无限循环解符文
while 1 > 0

    a = GetTimeStamp() - stoneSteleTime
    if a > 570 then //可以放轮了
        DelayRandom 56,58
        KeyDown O
        DelayRandom 137,139
        KeyUp O
        DelayRandom 736,747
        stoneSteleTime = GetTimeStamp()
    End If

    if currentState == 0 Then //第一部就是喷泉啦,没的话就直接
        call FindFountain() //找喷泉,找到就扔
    End If

    tarX      = -58
    tarY      = 83
    tolerance = 6
    Call Judge() //判断位置
    if tolLoc > 0 or currentState == 1 Then //现在人在喷泉地,下个目的地是左下
        tarX      = -58
        tarY      = 108
        tolerance = 4
        Call Move_Bear()
    End If

    tarX      = -58
    tarY      = 108
    tolerance = 6
    Call Judge() //判断位置
    if tolLoc > 0 or currentState == 2 Then //人在左下,看下是捡钱还是熊屁1

        a = GetTimeStamp() - boboTime
        if a > 55 and tolLoc > 0 then //放个小波波
            DelayRandom 123,135
            KeyDown E
            DelayRandom 152,160
            KeyUp E
            DelayRandom 701,720
            boboTime = GetTimeStamp()
        End If


        a = GetTimeStamp() - pickingTime
        if a > 130 then //可以捡钱了,捡前钱先放个屁
            Call Fart()
            tarX = -58
            tarY = 122
            tolerance = 4
            Call Move_Bear()
            pickingTime = GetTimeStamp()
            currentState = 4
        else //去真正的熊屁点
            DelayRandom 15,25
            KeyDown Right
            DelayRandom 95,96
            KeyDown Space
            DelayRandom 64,65
            KeyUp Space
            DelayRandom 119,121
            KeyDown Space
            DelayRandom 97,98
            KeyUp Space
            DelayRandom 42,43
            KeyUp Right
            DelayRandom 41,42

            currentState = 3
        End If

    End If

    if currentState == 3 Then //熊屁1地点到了+接下来去熊屁2(先走到临界点再跳一波,不麻烦)
        KeyDown Left
        DelayRandom 62,65
        KeyUp Left
        DelayRandom 12,14
        Call Fart()

        DelayRandom 50,62
        KeyDown Right
        DelayRandom 383,387
        KeyDown Space
        DelayRandom 76,77
        KeyUp Space
        DelayRandom 32,33
        KeyDown Space
        DelayRandom 87,88
        KeyUp Space
        DelayRandom 714,722
        KeyDown Space
        DelayRandom 72,73
        KeyUp Space
        DelayRandom 62,63
        KeyDown Space
        DelayRandom 61,62
        KeyUp Space
        DelayRandom 729,737
        KeyUp Right
        DelayRandom 50,62

        tarX      = 18
        tarY      = 108
        tolerance = 4
        Call Move_Bear()
        currentState = 5 //分支汇流
    End If

    if currentState == 4 Then //最下面一层捡钱中(如果自动寻路表现不好就再用录制吧)
        tarX      = 18
        tarY      = 108
        tolerance = 4
        Call Move_Bear()
        currentState = 5 //分支汇流
    End If

    tarX      = 18
    tarY      = 108
    tolerance = 6
    Call Judge()
    if tolLoc > 0 or currentState == 5 Then //开放熊屁2
        KeyDown Left
        DelayRandom 35,40
        KeyUp Left
        DelayRandom 16,18
        Call Fart()
        tarX      = 18
        tarY      = 74
        tolerance = 4
        Call Move_Bear() //前往熊屁3地点
        currentState = 6 //开始去熊屁3
    End If

    tarX      = 18
    tarY      = 74
    tolerance = 6
    Call Judge()
    if tolLoc > 0 or currentState == 6 Then //在熊屁3地点
        Call Fart()
        FindPic x3,y3,xEnd,yEnd,"E:\MHImg\BT_Water.bmp",000000,1.00,0,intX,intY
        a = GetTimeStamp() - pickingTime

        if intX >= 0 then //可以喷泉了
            //先10,74 左跳,再 -33,80 左跳
            tarX      = 10
            tarY      = 74
            tolerance = 4
            Call Move_Bear()

            DelayRandom 101,110
            KeyDown Left
            DelayRandom 154,156
            KeyDown Space
            DelayRandom 94,95
            KeyUp Space
            DelayRandom 197,199
            KeyDown Space
            DelayRandom 116,118
            KeyUp Space
            DelayRandom 122,124
            KeyUp Left
            DelayRandom 638,645
            KeyDown Left
            DelayRandom 557,563
            KeyDown Space
            DelayRandom 82,83
            KeyUp Space
            DelayRandom 160,162
            KeyDown Space
            DelayRandom 83,84
            KeyUp Space
            DelayRandom 106,108
            KeyUp Left
            DelayRandom 253,274

            currentState = 0
        else if a > 130 then //去捡钱点
            currentState = 1 //下一步去左下角
        else //直接去熊屁点1
            tarX      = -38
            tarY      = 108
            tolerance = 4
            Call Move_Bear()
            currentState = 3 //不绕远路了  直接熊屁点1
        End If
    End If

    if currentState < 0 or currentState > 6 Then
        currentState = 0 //初始化状态为0
    End If
    Delay 5
Wend