[General]
ScreenX=1440
ScreenY=2560
Times=0

[Script]
Dim tarX,tarY //目标
Dim logoX,logoY,intX,intY //算目的地差值
Dim DashCool //冲刺冷却
Dim tolerance,temp //快速移动的容差,0代表精确移动,另外个是局部变量
Dim cY,consecutiveTimes,consecutiveMax //用这个东西判断角色是不是没有X或Y轴变化了
Dim Hooking //钩子中,方便中途刹车
//目前已经算出一个二段跳能跳32的X轴(平地)
//几个测试点:轰炸点(右)-99,130    轰炸点(左)-48,129
//几个测试点:鸟跳左(42,154),鸟跳右(131,154),鸟跳右上(117,106),鸟跳左上(32,101),鸟跳喷泉(31,140)
//一个左冲或一个右冲能44轴,但是Y轴不好控制

Sub Move_Fly()  //飞行阶段的移动
    DashCool = 0
    while  1 > 0
        FindPic 0,1650,300,1900,"E:\MHImg\MSLogo.bmp",000000,1.00,0,logoX,logoY
        FindPic 0,1650,300,1900,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        intX = intX - logoX
        intY = intY - logoY
        temp = 0
        If DashCool <= 0 //冲刺冷却,别太频繁
            If intY < (tarY-32) Then //过远就下冲法
                KeyDown Down
                DelayRandom 53,54
                KeyUp Down
                DelayRandom 46,47
                KeyDown Down
                DelayRandom 45,46
                KeyUp Down
            Else If intY > (tarY+32) Then //过远就上冲法
                KeyDown Up
                DelayRandom 53,54
                KeyUp Up
                DelayRandom 46,47
                KeyDown Up
                DelayRandom 45,46
                KeyUp Up
            Else If intX > (tarX+32) Then //过远就左冲法
                KeyDown Left
                DelayRandom 53,54
                KeyUp Left
                DelayRandom 46,47
                KeyDown Left
                DelayRandom 45,46
                KeyUp Left
            Else If intX < (tarX-32) Then //过远就右冲法
                KeyDown Right
                DelayRandom 53,54
                KeyUp Right
                DelayRandom 46,47
                KeyDown Right
                DelayRandom 45,46
                KeyUp Right
            End If
            DashCool = 20
        else
            DashCool = DashCool - 1
            If intY < (tarY-tolerance) Then //如果人在目标之上,按压下(Y轴是用相反比较符)
                KeyUp Up
                KeyDown Down
            Else If intY > (tarY+tolerance) //如果人在目标之下,按压上(Y轴是用相反比较符)
                KeyUp Down
                KeyDown Up
            else
                KeyUp Down
                KeyUp Up
                temp = temp + 1
            End If

            If intX < (tarX-tolerance) Then //如果人在目标之左,按压右
                KeyUp Left
                KeyDown Right
            Else If intX > (tarX+tolerance) //如果人在目标之右,按压左
                KeyUp Right
                KeyDown Left
            else
                KeyUp Right
                KeyUp Left
                temp = temp + 1
            End If

            if temp >= 2 Then
                Exit Sub
            End If
        End If

        Delay 5
    Wend
End Sub

Sub Move_Bild() //鸟形态的地面移动
    consecutiveTimes	= -1  //初始就启用指南针判断
    consecutiveMax		= 3   //降落默认值为4
    Hooking				= 0   //钩子关闭
    while  1 > 0
        FindPic 0,1650,300,1900,"E:\MHImg\MSLogo.bmp",000000,1.00,0,logoX,logoY
        FindPic 0,1650,300,1900,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        intX = intX - logoX
        intY = intY - logoY
        if consecutiveTimes >= 0 Then //目前是在空中判断降落的阶段
            if Hooking > 0 and intY <= tarY Then //钩子的判断刹车
                TracePrint 钩子刹车
                KeyDown Alt
                DelayRandom 258,282
                KeyUp Alt
                Hooking = 0
            End If
            if intY == cY Then //Y轴没变化了
                consecutiveTimes = consecutiveTimes + 1
                //TracePrint 降落判断: & consecutiveTimes
                if consecutiveTimes >= consecutiveMax Then
                    consecutiveTimes	= -1	//判断为已经落地
                    consecutiveMax		= 3		//归位最大降落判断值
                    //TracePrint 判断已经落地
                End If
            else
                cY = intY
                consecutiveTimes = 0
                //TracePrint 降落判断: & consecutiveTimes
            End If
        else //继续根据
            if tolerance > 4 Then
                temp = tolerance
            else  //速走的默认为4
                temp = 4
            End If
            if intX < (tarX-24) Then //向右二段跳 //todo:可以加入滑翔
                consecutiveTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳滑翔
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 50,51
                KeyDown Space
                DelayRandom 80,81
                KeyUp Space
                DelayRandom 30,31
                KeyDown Space
                DelayRandom 75,76
                KeyUp Space
                DelayRandom 85,86
                KeyUp Right
                DelayRandom 146,151
            Else If intX > (tarX+24) Then //向左二段跳 //todo:可以加入滑翔
                consecutiveTimes = 0 //启动降落判断
                cY = 0
                TracePrint 左跳滑翔
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 50,51
                KeyDown Space
                DelayRandom 80,81
                KeyUp Space
                DelayRandom 30,31
                KeyDown Space
                DelayRandom 75,76
                KeyUp Space
                DelayRandom 85,86
                KeyUp Left
                DelayRandom 146,151
            Else If intX < (tarX-temp) Then //向右走
                KeyDown Right
            Else If intX > (tarX+temp) Then //向左走
                KeyDown Left
            else
                KeyUp Rights
                KeyUp Left
                If intY < tarY Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    TracePrint 下跳一次
                    DelayRandom 12,13
                    KeyDown Down
                    DelayRandom 76,77
                    KeyDown Space
                    DelayRandom 128,130
                    KeyUp Space
                    DelayRandom 453,454
                    KeyUp Down
                    DelayRandom 32,33
                Else If intY > tarY Then //如果人在目标之下,就上跳(Y轴是用相反比较符)
                    consecutiveTimes = 0 //启动降落判断
                    cY = intY
                    if intY > (tarY+25) Then	//>=26上跳就够不到了
                        consecutiveMax = 6 //延长一点降落判断
                        TracePrint 上跳一次
                        KeyDown Space
                        DelayRandom 5,6
                        KeyUp Space
                        DelayRandom 5,6
                        KeyDown Up
                        DelayRandom 5,6
                        KeyUp Up
                        DelayRandom 5,6
                        KeyDown Up
                        DelayRandom 5,6
                        KeyUp Up
                        DelayRandom 167,198
                    else
                        consecutiveMax = 6 //延长一点降落判断
                        TracePrint 钩子一次
                        KeyDown Alt
                        DelayRandom 128,132
                        KeyUp Alt
                        Hooking = 1 //开启钩子判断
                    End If
                else
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        //Y轴也达标了,到X轴了
                        If intX < (tarX-tolerance) Then //向右小碎步
                            KeyDown Right
                            DelayRandom 10,15
                            KeyUp Right
                        Else If intX > (tarX+tolerance) Then //向左小碎步
                            KeyDown Left
                            DelayRandom 10,15
                            KeyUp Left
                        else
                            Exit Sub
                        End If
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

temp = 1
GetFileLine tarX,Move.Conf,temp		//文件查找
temp = 2
GetFileLine tarY,Move.Conf,temp		//文件查找
temp = 3
GetFileLine tolerance,Move.Conf,temp	//文件查找
TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance
//Call Move_Fly()
Call Move_Bild()
MsgBox 到达目的[ & tarX & , & tarY & ],容忍度 & tolerance