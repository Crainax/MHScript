[General]
ScreenX=1440
ScreenY=2560
Times=0

[Script]
Dim x1,          x2,      y1,   y2    // 矩形区域:小地图采样点
Dim x3,          y3,      xEnd, yEnd  // 2个顶点:技能区/屏幕右下角顶点
Dim tarX,        tarY                 //目标
Dim logoX,       logoY,   intX, intY  //算目的地差值
Dim DashCool,    tolLoc               //冲刺冷却
Dim alterX,      alterY               //备用地点,传送门脚步开关
Dim tolerance,   temp,    yTolerance  //快速移动的容差,0代表精确移动,另外个是局部变量
Dim cY,          csTimes, csMax       //用这个东西判断角色是不是没有X或Y轴变化了
Dim Hooking,     gliding              //钩子中(方便中途刹车)/滑翔中
Dim staticCount, staticX, staticY     //防卡计数器
Dim LEDState                          //测试位置

//目前已经算出一个二段跳能跳32的X轴(平地)
//几个测试点:轰炸点(右)-99,130    轰炸点(左)-48,129
//几个测试点:鸟跳左(42,154),鸟跳右(131,154),鸟跳右上(111,106),鸟跳左上(31,101),鸟跳喷泉(31,140),右下(111,154),右下第二层(111,140)，左上第二层 (31，115)
//一个左冲或一个右冲能44轴,但是Y轴不好控制
//改成MapAnchor版本后:喷泉从(31,140)->(-63,108)


//熊:喷泉(-58,83),喷泉下方(-58,108),最下方捡钱(-58,122),火1(-38,108),火2(18,108),火3(18,74),小波波(-22,80)

Sub GetXY //获取角色的XY轴(如果找不到会左右移动)
    FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
    FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY

    if intX < 0 Then //人物跑到了边界  处理一下
        KeyDown Left
        DelayRandom 200,250
        KeyUp Left
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        if intX < 0 Then //左移了还是没找到,就右移
            KeyDown Right
            DelayRandom 200,250
            KeyUp Right
            FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        End if
    End if

    intX = intX - logoX
    intY = intY - logoY
End Sub

Sub AntiJam //一般跟随GetXY后用
    if staticX ==  intX and staticY == intY then //如果相等就累加计数器
        staticCount = staticCount + 1
    else
        staticX     = intX
        staticY     = intY
        staticCount = 0
    End If
    if staticCount >= 3 Then //
        // if intY == 107 and intX < -8+6 and intX > -8-6 Then //白名单
            // staticCount = 0
            // Exit Sub
        // End If

        Beep 500,500
        //KeyAllup //施放所有按键并重启
        // RestartScript //重启 和上面二选一即可
        // 模拟从绳子跳走
        DelayRandom 13,15
        KeyDown Right
        DelayRandom 21,22
        KeyDown Space
        DelayRandom 76,77
        KeyUp Space
        DelayRandom 44,45
        KeyUp Right
        DelayRandom 13,15

    End If
End Sub

Sub Move_Fly  //飞行阶段的移动
    DashCool = 0
    while  1 > 0
        FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        intX = intX - logoX
        intY = intY - logoY
        temp = 0
        If DashCool <= 0 //冲刺冷却,别太频繁
            If intY < (tarY-32) Then //过远就下冲法
                KeyDown Down
                DelayRandom 53,54
                KeyUp Down
                DelayRandom 46,47
                KeyDown Down
                DelayRandom 45,46
                KeyUp Down
            Else If intY > (tarY+32) Then //过远就上冲法
                KeyDown Up
                DelayRandom 53,54
                KeyUp Up
                DelayRandom 46,47
                KeyDown Up
                DelayRandom 45,46
                KeyUp Up
            Else If intX > (tarX+32) Then //过远就左冲法
                KeyDown Left
                DelayRandom 53,54
                KeyUp Left
                DelayRandom 46,47
                KeyDown Left
                DelayRandom 45,46
                KeyUp Left
            Else If intX < (tarX-32) Then //过远就右冲法
                KeyDown Right
                DelayRandom 53,54
                KeyUp Right
                DelayRandom 46,47
                KeyDown Right
                DelayRandom 45,46
                KeyUp Right
            End If
            DashCool = 20
        else
            DashCool = DashCool - 1
            If intY < (tarY-tolerance) Then //如果人在目标之上,按压下(Y轴是用相反比较符)
                KeyUp Up
                KeyDown Down
            Else If intY > (tarY+tolerance) //如果人在目标之下,按压上(Y轴是用相反比较符)
                KeyUp Down
                KeyDown Up
            else
                KeyUp Down
                KeyUp Up
                temp = temp + 1
            End If

            If intX < (tarX-tolerance) Then //如果人在目标之左,按压右
                KeyUp Left
                KeyDown Right
            Else If intX > (tarX+tolerance) //如果人在目标之右,按压左
                KeyUp Right
                KeyDown Left
            else
                KeyUp Right
                KeyUp Left
                temp = temp + 1
            End If

            if temp >= 2 Then
                Exit Sub
            End If
        End If

        Delay 5
    Wend
End Sub

Sub Move_Bild //鸟形态的地面移动
    csTimes	= -1  //初始就启用指南针判断
    csMax		= 4   //降落默认值为4
    Hooking				= 0   //钩子关闭
    while  1 > 0
        Call GetXY()
        if csTimes >= 0 Then //目前是在空中判断降落的阶段
            if gliding > 0 Then
                If intX >= (tarX-12) and intX <= (tarX+12) Then //滑翔该下来了
                    TracePrint 滑翔预判结束
                    gliding = 0 //结束滑翔
                    KeyUp LShift
                End If
            End If
            if Hooking > 0 and intY <= tarY - 3 Then //钩子的判断刹车
                TracePrint 钩子刹车
                KeyDown Alt
                DelayRandom 258,282
                KeyUp Alt
                Hooking = 0
            End If
            if intY == cY Then //Y轴没变化了
                csTimes = csTimes + 1
                //TracePrint 降落判断: & csTimes
                if csTimes >= csMax Then
                    csTimes	= -1	//判断为已经落地
                    csMax		= 4		//归位最大降落判断值
                    //TracePrint 判断已经落地
                    if gliding > 0 Then //滑翔提前碰地了
                        TracePrint 滑翔触地提前结束
                        gliding = 0 //结束滑翔
                        KeyUp LShift
                    End If
                End If
            else
                cY = intY
                csTimes = 0
                //TracePrint 降落判断: & csTimes
            End If
        else //继续根据
            Call AntiJam() //防卡
            if tolerance > 4 Then
                temp = tolerance
            else  //速走的默认为4
                temp = 4
            End If
            if intX < (tarX-32) Then //向右滑翔
                csMax = 8 //延长一点降落判断
                csTimes = 0 //启动降落判断
                cY = intY
                gliding = 1 //开始滑翔
                TracePrint 右滑翔
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 79,80
                KeyUp Right
                DelayRandom 210,213
                KeyDown Space
                DelayRandom 53,54
                KeyUp Space
                DelayRandom 54,55
                KeyDown Space
                DelayRandom 63,64
                KeyUp Space
                DelayRandom 176,178
                KeyDown LShift
                // DelayRandom 402,407
                // KeyUp LShift
            Else if intX > (tarX+32) Then //向左滑翔
                csMax = 8 //延长一点降落判断
                csTimes = 0 //启动降落判断
                cY = intY
                gliding = 1 //开始滑翔
                TracePrint 左滑翔
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 79,80
                KeyUp Left
                DelayRandom 210,213
                KeyDown Space
                DelayRandom 53,54
                KeyUp Space
                DelayRandom 54,55
                KeyDown Space
                DelayRandom 63,64
                KeyUp Space
                DelayRandom 176,178
                KeyDown LShift
                // DelayRandom 402,407
                // KeyUp LShift
            Else if intX <= (tarX-18) Then //向右二段跳
                csTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 50,51
                KeyDown Space
                DelayRandom 80,81
                KeyUp Space
                DelayRandom 30,31
                KeyDown Space
                DelayRandom 75,76
                KeyUp Space
                DelayRandom 85,86
                KeyUp Right
                DelayRandom 146,151
            Else If intX >= (tarX+18) Then //向左二段跳
                csTimes = 0 //启动降落判断
                cY = 0
                TracePrint 左跳
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 50,51
                KeyDown Space
                DelayRandom 80,81
                KeyUp Space
                DelayRandom 30,31
                KeyDown Space
                DelayRandom 75,76
                KeyUp Space
                DelayRandom 85,86
                KeyUp Left
                DelayRandom 146,151
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
                DelayRandom 230,260
                KeyUp Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
                DelayRandom 230,260
                KeyUp Left
            else
                If intY < tarY Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    csTimes = 0 //启动降落判断
                    cY = intY
                    TracePrint 下跳一次
                    DelayRandom 12,13
                    KeyDown Down
                    DelayRandom 76,77
                    KeyDown Space
                    DelayRandom 128,130
                    KeyUp Space
                    DelayRandom 453,454
                    KeyUp Down
                    DelayRandom 32,33
                Else If intY > tarY Then //如果人在目标之下,就上跳(Y轴是用相反比较符)
                    csTimes = 0 //启动降落判断
                    cY = intY
                    if intY > (tarY+25) Then	//>=26上跳就够不到了
                        csMax = 6 //延长一点降落判断
                        TracePrint 钩子一次
                        KeyDown Alt
                        DelayRandom 128,132
                        KeyUp Alt
                        Hooking = 1 //开启钩子判断
                    Else if intY >= (tarY+16) Then	// < 26时跳得高一些
                        csMax = 8 //延长一点降落判断
                        TracePrint 上跳一次高
                        DelayRandom 128,130
                        KeyDown Space
                        DelayRandom 69,70
                        KeyUp Space
                        DelayRandom 325,329
                        KeyDown Up
                        DelayRandom 61,62
                        KeyUp Up
                        DelayRandom 54,55
                        KeyDown Up
                        DelayRandom 98,99
                        KeyUp Up
                    else //小于16就这样跳
                        csMax = 8 //延长一点降落判断
                        TracePrint 上跳一次矮
                        DelayRandom 128,130
                        KeyDown Space
                        DelayRandom 70,71
                        KeyUp Space
                        DelayRandom 394,398
                        KeyDown Up
                        DelayRandom 67,68
                        KeyUp Up
                        DelayRandom 54,55
                        KeyDown Up
                        DelayRandom 87,88
                        KeyUp Up
                    End If
                else
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        for 10
                            If intX < (tarX-tolerance) Then //向右小碎步
                                tolLoc = (tarX - tolerance - intX) * 14
                                KeyDown Right
                                Delay tolLoc
                                KeyUp Right
                            Else If intX > (tarX+tolerance) Then //向左小碎步
                                tolLoc = (intX - tarX - tolerance) * 14
                                KeyDown Left
                                Delay tolLoc
                                KeyUp Left
                            else
                                Exit Sub
                            End If

                            Call GetXY() //更新人物坐标
                        Next
                        Exit Sub //次数到了直接结束
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

Sub Move_Bear  //熊形态的移动(解决了卡绳子的问题) v2.3 同步了火毒的修正
    csTimes = -1  //初始就启用指南针判断
    csMax   = 4   //降落默认值为4
    while  1 > 0
        Call GetXY()

        if csTimes >= 0 Then //目前是在空中判断降落的阶段
            if Hooking > 0 and intY <= tarY - 3 Then //钩子的判断刹车
                TracePrint 钩子刹车
                KeyDown Alt
                DelayRandom 258,282
                KeyUp Alt
                Hooking = 0
            End If
            if intY == cY Then //Y轴没变化了
                csTimes = csTimes + 1
                TracePrint 降落判断: & csTimes
                if csTimes >= csMax Then
                    csTimes	= -1	//判断为已经落地
                    csMax		= 4		//归位最大降落判断值
                    TracePrint 判断已经落地
                End If
            else
                cY = intY
                csTimes = 0
                TracePrint 降落判断: & csTimes
            End If
        else //继续根据
            Call AntiJam() //防卡
            if tolerance > 2 Then
                tolLoc = tolerance
            else  //速走的默认为2
                tolLoc = 2
            End If
            if intX < (tarX-24) Then //向右二段跳
                csTimes = 0 //启动降落判断
                cY = intY
                TracePrint 右跳
                DelayRandom 15,25
                KeyDown Right
                DelayRandom 96,97
                KeyDown Space
                DelayRandom 44,45
                KeyUp Space
                DelayRandom 71,72
                KeyDown Space
                DelayRandom 62,63
                KeyUp Space
                DelayRandom 267,270
                KeyUp Right
                DelayRandom 319,323
            Else If intX > (tarX+24) Then //向左二段跳
                csTimes = 0 //启动降落判断
                cY = 0
                TracePrint 左跳
                DelayRandom 15,25
                KeyDown Left
                DelayRandom 96,97
                KeyDown Space
                DelayRandom 44,45
                KeyUp Space
                DelayRandom 71,72
                KeyDown Space
                DelayRandom 62,63
                KeyUp Space
                DelayRandom 267,270
                KeyUp Left
                DelayRandom 319,323
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
                Delay (tarX - tolLoc - intX) * 52
                KeyUp Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
                Delay (intX - tarX - tolLoc) * 52
                KeyUp Left
            else
                If intY < (tarY - yTolerance) Then //如果人在目标之上,就下跳(Y轴是用相反比较符)
                    TracePrint 下跳一次
                    KeyDown Down
                    DelayRandom 134,136
                    KeyDown Space
                    if intY > (tarY - 13) //太接近就只用同一种办法
                        DelayRandom 162,164
                    else
                        Delay (tarY - intY) * 49 - 520
                    End If
                    KeyUp Space
                    DelayRandom 66,67
                    KeyUp Down
                    DelayRandom 548,554
                Else If intY > (tarY + yTolerance) Then //如果人在目标之下,上钩
                    csTimes = 0 //启动降落判断
                    cY = intY
                    csMax = 8 //延长一点降落判断
                    TracePrint 钩子一次
                    Hooking = 1
                    KeyDown Alt
                    DelayRandom 328,430
                    KeyUp Alt
                else
                    yTolerance = 0
                    if tolerance == 0 then //传送门型
                        TracePrint 传送一发
                        If intX < tarX Then //向右小碎步
                            DelayRandom 45,52
                            KeyDown Right
                            DelayRandom 98,99
                            KeyDown Up
                            DelayRandom 104,106
                            KeyUp Up
                            DelayRandom 56,57
                            KeyDown Up
                            DelayRandom 63,64
                            KeyUp Up
                            DelayRandom 50,51
                            KeyDown Up
                            DelayRandom 70,71
                            KeyUp Up
                            DelayRandom 37,38
                            //KeyDown Up
                            //DelayRandom 77,78
                            //KeyUp Up
                            //DelayRandom 37,38
                            //KeyDown Up
                            //DelayRandom 82,83
                            //KeyUp Up
                            //DelayRandom 38,39
                            KeyUp Right
                            DelayRandom 11,12
                        Else If intX > tarX Then //向左小碎步
                            DelayRandom 45,52
                            KeyDown Left
                            DelayRandom 98,99
                            KeyDown Up
                            DelayRandom 104,106
                            KeyUp Up
                            DelayRandom 56,57
                            KeyDown Up
                            DelayRandom 63,64
                            KeyUp Up
                            DelayRandom 50,51
                            KeyDown Up
                            DelayRandom 70,71
                            KeyUp Up
                            DelayRandom 37,38
                            //KeyDown Up
                            //DelayRandom 77,78
                            //KeyUp Up
                            //DelayRandom 37,38
                            //KeyDown Up
                            //DelayRandom 82,83
                            //KeyUp Up
                            //DelayRandom 38,39
                            KeyUp Left
                            DelayRandom 11,12
                        else //直接按上
                            DelayRandom 45,52
                            KeyDown Up
                            DelayRandom 120,122
                            KeyUp Up
                            DelayRandom 231,234
                        End If
                        Delay 125
                        Call GetXY()
                        if intX >= (alterX-12) and intX <= (alterX+12) and intY >= (alterY-3) and intY <= (alterY+3) then //到了传送后的地点
                            TracePrint 到达目的地
                            alterX    = 0
                            alterY    = 0
                            Exit Sub
                        else
                            TracePrint 未到达[ & intX & , & intY & ],传送[ & alterX & , & alterY & ]
                        End if
                    else //非传送门
                        if tolerance < 4 Then //容忍度小于4还是要小碎步
                            for 10
                                If intX < (tarX-tolerance) Then //向右小碎步
                                    KeyDown Right
                                    Delay (tarX - tolerance - intX) * 14
                                    KeyUp Right
                                Else If intX > (tarX+tolerance) Then //向左小碎步
                                    KeyDown Left
                                    Delay (intX - tarX - tolerance) * 14
                                    KeyUp Left
                                else
                                    Exit Sub
                                End If

                                Call GetXY() //更新人物坐标
                            Next
                            Exit Sub //次数到了直接结束
                        else //容忍度大于等于4可以直接结束
                            Exit Sub
                        End If
                    End if
                End If
            End If
        End If
        Delay 5
    Wend
End Sub

GetScreenResolution intX, intY
if intX > intY then //横放屏幕
    x1 = 700
    y1 = 550
    x2 = 1650
    y2 = 850
    x3 = 1500
    y3 = 1250
    xEnd = 2560
    yEnd = 1440
else //竖放屏幕
    x1 = 0
    y1 = 1650
    x2 = 300
    y2 = 1900
    x3 = 800
    y3 = 2300
    xEnd = 1440
    yEnd = 2560
End If
while 1 > 0
    LEDState = GetLED(1)
    if LEDState == 0 then //
        tolLoc = 1
        GetFileLine tarX,Move.Conf,tolLoc		//文件查找
        tolLoc = 2
        GetFileLine tarY,Move.Conf,tolLoc		//文件查找
        tolLoc = 3
        GetFileLine tolerance,Move.Conf,tolLoc	//文件查找
        tolLoc = 4
        GetFileLine alterX,Move.Conf,tolLoc	//文件查找
        tolLoc = 5
        GetFileLine alterY,Move.Conf,tolLoc	//文件查找
        TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance & ,传送[ & alterX & , & alterY & ]
        //tolerance = 4 //容忍度,4为推荐值
        //Call Move_Fly()
        //Call Move_Bild()
        Call Move_Bear()
        MsgBox 测试结束
    else //大写键亮的话就获取点
        FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,0.9,0,logoX,logoY	//找图
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY	//找图
        If intX >= 0 Then
            // TracePrint [图标X轴 & logoX & ,图标Y轴 & logoY & ],[绿点X轴 & intX & ,绿点Y轴 & intY & ]
            // MsgBox [图标X轴 & logoX & ,图标Y轴 & logoY & ],[绿点X轴 & intX & ,绿点Y轴 & intY & ]
            intX = intX - logoX
            intY = intY - logoY
            TracePrint [人物X轴 & intX & ,人物Y轴 & intY & ]
            MsgBox [人物X轴 & intX & ,人物Y轴 & intY & ]
        else
            MsgBox "没找到"	 //弹窗
        End If
    End If
Wend