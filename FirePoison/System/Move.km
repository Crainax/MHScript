[General]
ScreenX=2560
ScreenY=1440
Times=0

[Script]
Dim x1,        x2,               y1,   y2    // 矩形区域:小地图采样点
Dim x3,        y3,               xEnd, yEnd  // 2个顶点:技能区/屏幕右下角顶点
Dim tarX,      tarY                          //目标
Dim logoX,     logoY,            intX, intY  //算目的地差值
Dim cY,        consecutiveTimes, stuckTimes  //用这个东西判断角色是不是没有X或Y轴变化了
Dim tolerance, tolLoc,           yTolerance  //快速移动的容差,0代表精确移动,另外个是局部变量

//左上传送点(-96,90),喷泉点(-81,104),左下传送点(-73,118),右下传送点(5,118),右上传送点(29,88),右下捡钱点(48,118),普攻(-8,107),上巡(-8,79),测试上瞬(15,68),测试上瞬(-58,90),左下捡钱(-98,118)

Sub GetXY //获取角色的XY轴(如果找不到会左右移动)
    FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
    FindPic x1,y1,x2,y2,"E:\MHImg\MapAnchor.bmp",000000,1.00,0,logoX,logoY

    if intX < 0 Then //人物跑到了边界  处理一下
        KeyDown Left
        DelayRandom 200,250
        KeyUp Left
        FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        if intX < 0 Then //左移了还是没找到,就右移
            KeyDown Right
            DelayRandom 200,250
            KeyUp Right
            FindPic x1,y1,x2,y2,"E:\MHImg\Me.bmp",000000,1.00,0,intX,intY
        End if
    End if

    intX = intX - logoX
    intY = intY - logoY
End Sub

Sub Move //精确的移动
    consecutiveTimes = -1 //初始就启用指南针判断
    stuckTimes = 0 //防卡检测初始次数为0
    cY = 0
    KeyAllup //施放所有按键防止卡住
    while  1 > 0

        Call GetXY()

        if consecutiveTimes >= 0 Then //目前是在空中判断降落的阶段
            if intY == cY Then //Y轴没变化了
                consecutiveTimes = consecutiveTimes + 1
                if consecutiveTimes >= 8 Then
                    consecutiveTimes	= -1	//判断为已经落地
                End If
            else
                cY = intY
                consecutiveTimes = 0
            End If
        else //继续根据
            if tolerance > 4 Then
                tolLoc = tolerance
            else  //速走的默认为4
                tolLoc = 4
            End If
            if intX < (tarX-12) Then //右瞬:这里的shit必须要抬起来 不然好像下面会出问题
                KeyDown Right
                DelayRandom 12,13
                KeyDown LShift
                DelayRandom 68,69
                KeyUp LShift
                DelayRandom 212,233
                KeyUp Right
            Else If intX > (tarX+12) Then //向左瞬
                KeyDown Left
                DelayRandom 12,13
                KeyDown LShift
                DelayRandom 68,69
                KeyUp LShift
                DelayRandom 212,233
                KeyUp Left
            Else If intX < (tarX-tolLoc) Then //向右走
                KeyDown Right
                DelayRandom 230,260
                KeyUp Right
            Else If intX > (tarX+tolLoc) Then //向左走
                KeyDown Left
                DelayRandom 230,260
                KeyUp Left
            else //到Y方向的了
                If intY < (tarY - yTolerance) Then //如果人在目标之上,就下瞬(Y轴是用相反比较符)
                    KeyUp Up
                    If stuckTimes < 5 Then //普通下瞬
                        if cY != intY Then //有变化了,就重置计数器
                            cY = intY
                            stuckTimes = 0
                        else
                            stuckTimes = stuckTimes + 1 //原地就计数器+1
                        End If
                        KeyDown Down
                        DelayRandom 12,13
                        KeyDown LShift
                        DelayRandom 68,69
                        KeyUp LShift
                        DelayRandom 212,233
                    else //计数器达到5次Y轴不动了,下跳
                        consecutiveTimes = 0     //启动降落判断
                        cY               = intY
                        stuckTimes       = 0
                        DelayRandom 12,13
                        KeyDown Down
                        DelayRandom 76,77
                        KeyDown Space
                        DelayRandom 128,130
                        KeyUp Space
                        DelayRandom 453,454
                        KeyUp Down
                        DelayRandom 32,33
                    End If
                Else If intY > (tarY + yTolerance) Then //如果人在目标之下,就上瞬(Y轴是用相反比较符)
                    KeyUp Down
                    If stuckTimes < 5 Then //普通上瞬
                        if cY != intY Then //有变化了,就重置计数器
                            cY = intY
                            stuckTimes = 0
                        else
                            stuckTimes = stuckTimes + 1 //原地就计数器+1
                        End If
                        KeyDown Up
                        DelayRandom 12,13
                        KeyDown LShift
                        DelayRandom 68,69
                        KeyUp LShift
                        DelayRandom 212,233
                    else //计数器达到5次Y轴不动了,钩子
                        consecutiveTimes = 0     //启动降落判断
                        cY               = intY
                        stuckTimes       = 0
                        DelayRandom 12,13
                        KeyDown Alt
                        DelayRandom 328,430
                        KeyUp Alt
                        DelayRandom 32,33
                    End If
                else //Y轴搞定了,到容忍度的X轴了,前提是不在空中
                    KeyAllup
                    consecutiveTimes = -1 //这一步已经不需要监控Y轴卡住了
                    yTolerance = 0
                    if tolerance < 4 Then //容忍度小于4还是要小碎步
                        //Y轴也达标了,到X轴了
                        //循环几次,如果都不行,就直接退出子程序防止太久
                        for 10
                            If intX < (tarX-tolerance) Then //向右小碎步
                                tolLoc = (tarX - tolerance - intX) * 14
                                KeyDown Right
                                Delay tolLoc
                                KeyUp Right
                            Else If intX > (tarX+tolerance) Then //向左小碎步
                                tolLoc = (intX - tarX - tolerance) * 14
                                KeyDown Left
                                Delay tolLoc
                                KeyUp Left
                            else
                                Exit Sub
                            End If

                            Call GetXY() //更新人物坐标
                        Next
                        Exit Sub //次数到了直接结束
                    else //容忍度大于等于4可以直接结束
                        Exit Sub
                    End If
                End If
            End If
        End If

        Delay 5
    Wend
End Sub

//分辨率初始化
GetScreenResolution intX, intY
if intX > intY then //横放屏幕
    x1 = 700
    y1 = 550
    x2 = 1650
    y2 = 850
    x3 = 1500
    y3 = 1250
    xEnd = 2560
    yEnd = 1440
else //竖放屏幕
    x1 = 0
    y1 = 1650
    x2 = 300
    y2 = 1900
    x3 = 800
    y3 = 2300
    xEnd = 1440
    yEnd = 2560
End If
tolLoc = 1
GetFileLine tarX,Move.Conf,tolLoc		//文件查找
tolLoc = 2
GetFileLine tarY,Move.Conf,tolLoc		//文件查找
tolLoc = 3
GetFileLine tolerance,Move.Conf,tolLoc	//文件查找
TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance
//tolerance = 4 //容忍度,4为推荐值
Call Move()
TracePrint 到了

tarX      = -73
tarY      = 118
tolerance = 0
TracePrint 前往[ & tarX & , & tarY & ],容忍度 & tolerance
Call Move() //回去一波右下角放
TracePrint 到了
MsgBox 测试结束
